resource_types:
- name: terraform
  type: registry-image
  source:
    repository: cycloid/terraform-resource
    tag: ((terraform_version))


resources:
- name: tfstate
  type: terraform
  icon: terraform
  source:
    env_name: ($ .environment $)
    backend_type: http
    backend_config:
      address: '($ .api_url $)/inventory?jwt=($ .inventory_jwt $)'
    vars:
      cycloid_jwt: ((cycloid_api_key))
      cycloid_api_url: ($ .api_url $)
      cy_org: ($ .organization_canonical $)
      cy_pro: ($ .project $)
      cy_env: ($ .environment $)
      cy_com: ($ .component $)
($ if eq .use_case "ionos" $)
      ionos_cred: ((ionos_cred))
      ionos_region: ((ionos_region))
($ else if eq .use_case "outscale" $)
      outscale_cred: ((outscale_cred))
      outscale_region: ((outscale_region))
($ end $)


# The Terraform stack (will be merged with the config)
- name: git_stack-terraform
  type: git
  icon: github-circle
  source:
    uri: ($ .scs_url $)
    branch: ($ .scs_branch $)
    ($- if eq .scs_cred_type "basic_auth" $)
    username: ((($ .scs_cred_path $).username))
    password: ((($ .scs_cred_path $).password))
    ($- end $)
    ($- if eq .scs_cred_type "ssh" $)
    private_key: ((($ .scs_cred_path $).ssh_key))
    ($- end $)
    paths:
      - ($ .stack_path $)/terraform/($ .use_case $)/*

# The Terraform config (will be merged with the stack)
- name: git_config-terraform
  type: git
  icon: github-circle
  source:
    uri: ($ .cr_url $)
    branch: ($ .cr_branch $)
    ($- if eq .cr_cred_type "basic_auth" $)
    username: ((($ .cr_cred_path $).username))
    password: ((($ .cr_cred_path $).password))
    ($- end $)
    ($- if eq .cr_cred_type "ssh" $)
    private_key: ((($ .cr_cred_path $).ssh_key))
    ($- end $)
    paths:
      - ($ .organization_canonical $)/($ .project $)/($ .environment $)/($ .component $)/terraform/($ .use_case $)/*


groups:
- name: overview
  jobs:
    - deploy-infra

- name: destroy
  jobs:
    - destroy-infra
    - delete-kubeconfig


jobs:
  - name: deploy-infra
    serial: true
    max_in_flight: 1
    build_logs_to_retain: 10
    plan:
      - in_parallel:
        - get: git_stack-terraform
          trigger: true

        - get: git_config-terraform
          trigger: true

      - task: merge-stack-and-config
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: cycloid/cycloid-toolkit
              tag: latest
          run:
            path: /usr/bin/merge-stack-and-config
          inputs:
          - name: git_config-terraform
            path: "config"
          - name: git_stack-terraform
            path: "stack"
          outputs:
          - name: merged-stack
            path: "merged-stack"
        params:
          CONFIG_PATH: ($ .organization_canonical $)/($ .project $)/($ .environment $)/($ .component $)/terraform/($ .use_case $)
          STACK_PATH: ($ .stack_path $)/terraform/($ .use_case $)

      - put: tfstate
        params:
          terraform_source: merged-stack/


  # Destroy the infrastructure
  - name: destroy-infra
    max_in_flight: 1
    build_logs_to_retain: 10
    plan:
      - in_parallel:
        - get: git_stack-terraform
          trigger: false
        - get: git_config-terraform
          trigger: false
        - get: tfstate
          trigger: false

      - task: merge-stack-and-config
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: cycloid/cycloid-toolkit
              tag: latest
          run:
            path: /usr/bin/merge-stack-and-config
          inputs:
          - name: git_config-terraform
            path: "config"
          - name: git_stack-terraform
            path: "stack"
          outputs:
          - name: merged-stack
            path: "merged-stack"
        params:
          CONFIG_PATH: ($ .organization_canonical $)/($ .project $)/($ .environment $)/($ .component $)/terraform/($ .use_case $)
          STACK_PATH: ($ .stack_path $)/terraform/($ .use_case $)

      - put: tfstate
        params:
          action: destroy
          terraform_source: merged-stack/
        get_params:
          action: destroy