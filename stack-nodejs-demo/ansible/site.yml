---
- name: install applications
  hosts: all
  become: yes

  vars_files:
  - "environments/default.yml"
  - ["environments/node.yml", "environments/empty.yml"]

  tasks:
  - name: Install aptitude
    apt:
      name: aptitude
      state: latest
      update_cache: true

  - name: Install required system packages
    apt:
      pkg:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
        - python3-pip
        - virtualenv
        - python3-setuptools
      state: latest
      update_cache: true

  - name: Add Docker GPG apt Key
    apt_key:
      url: https://download.docker.com/linux/debian/gpg
      state: present

  - name: Add Docker Repository
    apt_repository:
      repo: deb https://download.docker.com/linux/debian bookworm stable
      state: present

  - name: Update apt and install docker-ce
    apt:
      name: docker-ce
      state: latest
      update_cache: true

  - name: Install Docker Module for Python
    apt:
      name: python3-docker
      state: latest
      update_cache: true

  - name: Pull default Docker image
    docker_image:
      name: '{{ app_image }}:{{ app_tag }}'
      source: pull

  - name: Start node container
    docker_container:
      name: node
      image: '{{ app_image }}:{{ app_tag }}'
      exposed_ports:
        - '0.0.0.0:80:{{ app_port }}'
      state: started

  - name: Service to Restart
    service:
      name: '{{ hosts_service }}'
      state: restarted
    when: (hosts_service is defined) and (hosts_service|length > 0)

  - name: Package to Install
    apt:
      name: '{{ hosts_package }}'
      state: present
    when: (hosts_package is defined) and (hosts_package|length > 0)

  - name: User to Create
    user:
      name: '{{ hosts_user }}'
      shell: '/bin/bash'
      state: present
    when: (hosts_user is defined) and (hosts_user|length > 0)